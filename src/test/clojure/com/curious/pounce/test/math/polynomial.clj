(ns com.curious.pounce.test.math.polynomial
  (:refer-clojure :exclude [+ - * / < <= > >= = not= max-key min-key])
  (:use com.curious.pounce.math.polynomial
        com.curious.pounce.math.math
        clojure.test))

(deftest polynomial-1 (is (= (polynomial 3) {[1 1] [3 1 1]})))
(deftest polynomial-2 (is (= (polynomial [2 'x]) {['x 1] [2 'x 1]})))
(deftest polynomial-3 (is (= (polynomial ['x 3]) {['x 3] [1 'x 3]})))
(deftest polynomial-4 (is (= (polynomial [2 'x 3]) {['x 3] [2 'x 3]})))
(deftest polynomial-5 (is (= (polynomial 3 [2 'x] ['x 3] [2 'x 3]) {[1 1] [3 1 1] ['x 1] [2 'x 1] ['x 3] [3 'x 3]})))
(deftest polynomial-add-1 (is (= (+ (polynomial 3 [2 'x 3] [8 'x 4]) (polynomial 4 ['x 4]))
                                 {[1 1] [7 1 1] ['x 3] [2 'x 3] ['x 4] [9 'x 4]})))
(deftest polynomial-add-2 (is (= (+ (polynomial [2 'x 3] [8 'x 4]) 5)
                                 {[1 1] [5 1 1] ['x 3] [2 'x 3] ['x 4] [8 'x 4]})))
(deftest polynomial-add-3 (is (= (+ 5 (polynomial 4 ['x 4]))
                                 {[1 1] [9 1 1] ['x 4] [1 'x 4]})))
(deftest polynomial-negate-test (is (= (- (polynomial 3 [2 'x 3] [8 'x 4])) {[1 1] [-3 1 1] ['x 3] [-2 'x 3] ['x 4] [-8 'x 4]})))
(deftest polynomial-multiply-2 (is (= (* (polynomial [2 'x 3] [8 'x 4]) 5)
                                 {['x 3] [10 'x 3] ['x 4] [40 'x 4]})))
(deftest polynomial-multiply-3 (is (= (* 5 (polynomial 4 ['x 4]))
                                 {[1 1] [20 1 1] ['x 4] [5 'x 4]})))
(deftest polynomial-constant-1 (is (= (constant-part (polynomial [2 'x 3])) {})))
(deftest polynomial-constant-2 (is (= (constant-part (polynomial 2)) {[1 1] [2 1 1]})))
(deftest polynomial-constant-3 (is (= (constant-part (polynomial 'epsilon)) {['epsilon 1] [1 'epsilon 1]})))
(deftest polynomial-constant-4 (is (= (constant-part (polynomial 2 [2 'x 3])) {[1 1] [2 1 1]})))
(deftest polynomial-constant-5 (is (= (constant-part (polynomial 2 'epsilon)) {[1 1] [2 1 1] ['epsilon 1] [1 'epsilon 1]})))
(deftest polynomial-constant-6 (is (= (constant-part (polynomial 2 'epsilon [2 'x 3])) {[1 1] [2 1 1] ['epsilon 1] [1 'epsilon 1]})))
(deftest polynomial-less-than-1 (is (< (polynomial [10 'x 30] [2 'y 4]) (polynomial 5))))
(deftest polynomial-less-than-2 (is (< (polynomial [10 'x 30] [2 'y 4] 'epsilon) (polynomial 5))))
(deftest polynomial-less-than-3 (is (< (polynomial [10 'x 30] [2 'y 4]) (polynomial 'epsilon))))
(deftest polynomial-less-than-4 (is (< (polynomial [10 'x 30] [2 'y 4] ['epsilon 2]) (polynomial 'epsilon))))
(deftest polynomial-less-than-5 (is (< (polynomial [10 'x 30] [2 'y 4] ['epsilon 2] [100 'epsilon 3]) (polynomial [5'epsilon 2]))))
(deftest polynomial-less-than-6 (is (< (polynomial [10 'x 30] [2 'y 4]) 5)))
(deftest polynomial-less-than-7 (is (< 5 (polynomial 40 [10 'x 30] [2 'y 4]))))
(deftest polynomial=
  (is (= (polynomial [10 'x 2] [1 'y 3]) (polynomial [10 'x 2] [1 'y 3])))
  (is (= (polynomial 5) 5))
  (is (= 5 (polynomial 5)))
  (is (not= (polynomial [10 'x 2] [2 'y 3]) (polynomial [10 'x 2] [1 'y 3])))
  (is (not= (polynomial [10 'x 2] [1 'x 3]) (polynomial [10 'x 2] [1 'y 3])))
  (is (not= (polynomial [10 'x 2] [1 'y 3]) (polynomial [10 'x 2] [1 'y 4])))
  (is (not= (polynomial 6) 5))
  (is (not= 5 (polynomial 6))))
